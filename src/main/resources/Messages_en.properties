addvolume.error.directory_invalid=Path for volume to be added invalid: "{0}".
addvolume.error.unknown_validator_type=Unknown validator type "{0}".
addvolume.error.no_database_connection=Database connection required for adding a volume.
addvolume.error.path_already_used=Volume with path "{0}" already exists (id {1}), will not add another volume for that path.
addvolume.info.added_volume_success=Successfully added new volume with path "{0}", id {1} and validator "{2}".
addvolume.error.added_volume_failure=Failed to add new volume with path "{0}" and validator "{1}".
addvolume.error.cannot_get_canonical_directory_name=Failed to determine canonical path for "{0}".
args.print_help=Print help and exit.
args.print_version=Print version and exit.
args.print_environment=Print environment information on startup.
args.stop_interpreting_switches=Following parameters are considered file names.
args.log_level=Set logging granularity (all, trace, debug, info, warn, error, fatal, off)
args.num_threads=Number of threads
args.quiet=Quiet mode, show only results which are warnings or errors.
args.unknown_switch=Unknown switch "{0}".
args.config_file=Define path to configuration file.
args.add_volume=Add new volume.
args.delete_volume=Delete volume.
args.set_volume_validator=Set volume validator type.
args.wikidata=Query Wikidata.
args.debug.scanning_directory=Starting to scan directory tree "{0}".
args.error.scanning_directory=Problem scanning directory tree '{0}'.
args.error.superfluous_switch_argument=Switch {0} cannot have an argument.
args.error.missing_argument=Switch {0} needs an argument.
args.error.invalid_number_of_threads=Invalid number of threads: '{0}'. Must be integer number larger than zero.
args.error.invalid_number_of_threads_exception=Invalid number of threads: '{0}' ({1}). Must be integer number larger than zero.
args.error.invalid_log_level=Invalid log level: '{0}'.
args.error.neither_file_nor_directory=Argument is neither file nor directory: "{0}".
deletevolume.error.cannot_get_canonical_directory_name=Failed to determine canonical path for "{0}".
deletevolume.error.no_database_connection=Database connection required for deleting a volume.
deletevolume.error.unknown_path=Could not find volume with path "{0}".
system.memory.free=Free memory
system.memory.total=Total memory
system.memory.max=Max memory
system.os=Operating system
system.java=Java environment
system.username=User name
system.userhomedir=User home directory
system.workingdir=Working directory
system.ipaddress=IP address
system.hostname=Hostname
system.argsvm=Arguments VM
system.argsapp=Arguments app
system.processid=Process ID
system.jars=Libraries
system.error.failed_to_look_up_host=Failed to look up host name: {0}
init.debug.loaded_volumes=Loaded {0} volume(s).
init.error.failure_load_configuration=Failed to load configuration file: "{0}": {1}
init.error.failure_close_configuration=Failed to close configuration file: "{0}": {1}
init.error.invalid_log_directory=Invalid log directory: "{0}".
init.info.start_save_tsv=Starting to save into tsv file "{0}".
init.info.finish_save_tsv=Finished saving into tsv file "{0}".
init.error.problem_loading_tsv=Problem loading tsv file "{0}".
init.error.failed_to_close_tsv=Failed to close tsv file "{0}".
init.error.tsv_dir_does_not_exist=Invalid tsv directory: "{0}".
init.error.tsv_file_creation=Failed to open tsv file "{0}" for writing.
init.error.tsv_file_write=Failed to write into tsv file "{0}".
init.error.database_dir_does_not_exist=Invalid database directory: "{0}".
init.error.database_close_failed=Closing database failed.
init.error.database_connection_attempt_failed=Unable to connect to database "{0}".
init.error.database_execute_update_failed=Failed to execute database update "{0}".
init.debug.database_connection_attempt_succeeded=Connected to database "{0}" in {1} ms.
init.info.database_connection_closed=Closed database connection "{0}".
init.debug.database_loaded=Loaded {0} record(s) with {1} in {2} ms.
init.info.success_load_configuration=Loaded {1} properties from configuration file "{0}".
init.info.skip_load_configuration=Skipped loading configuration, file "{0}" does not exist.
init.error.configuration_file_does_not_exist=Configuration file "{0}" does not exist.
init.debug.exiftool_setup=Initialized exiftool from "{0}", version {1}, in {2} ms.
init.info.load_tsv=About to load volume information from tsv file "{0}".
init.info.loaded_volumes=Loaded information on {0} volume(s).
init.error.exiftool_setup=Failed to initialize exiftool at path "{0}".
init.debug.exiftool_undefined=No path to exiftool defined.
init.error.hash_percentage=Not a valid floating point number "{0}".
init.error.unknown_validator=Unknown validator "{0}" for volume {1}.
init.error.unknown_config_key=Unknown configuration key "{0}".
database.debug.rows_deleted=Delete {0} row(s) with {1} in {2} ms.
database.error.close_resultset_failed=Failed to close result set object.
database.error.convert_from_result_set=Failed to read from database in {0}.
database.error.convert_to_prepared_statement=Failed to write to database in {0}.
database.error.prep_statement_set_value=Failed to set value in prepared statement.
database.error.failed_deleting_rows=Failed to delete rows.
database.error.failed_loading_rows=Failed to load rows.
database.error.failed_inserting_rows=Failed to insert rows.
database.error.failed_updating_rows=Failed to update rows.
database.error.failed_retrieve_row_id=Failed to retrieve row id.
database.error.prepare_statement_failed=Failed to prepare statement: {0}
database.info.deleted_volume=Deleted {0} file(s) in {1} directory/ies from {2} volume(s).
database.debug.database_saved=Saved records in {0} ms.
processor.number_of_files=About to process {0} file(s).
processor.number_of_threads=About to start {0} thread(s).
processor.result.ok=OK
processor.result.warning=Warning
processor.result.error=Error
processor.result.unknown=Unknown
processor.error.directory_invalid=Volume path "{0}" does not exist.
processor.error.not_a_directory=Volume path "{0}" exists but is not a directory.
processor.error.sleep=Unable to wait between checks for finished threads ({0}).
processor.files_time=Processed {0} file(s) in {1} second(s).
scanner.debug.start=Starting to scan directory tree "{0}".
scanner.debug.end=Done scanning "{0}" (directories: {1}, files: {2}, bytes: {3}) in {4} ms.
scanner.trace.enter=Entering directory "{0}".
scanner.trace.exit=Exiting directory "{0}".
scanner.trace.file=File "{0}".
scanner.trace.skip_file=Skipping file "{0}" because its name is on the file name ignore list.
scanner.debug.skipping_ignored=In directory "{0}" skipping subdirectory "{1}" because its name is on the ignore list.
scanner.error.scanning_directory=Problem scanning directory tree "{0}".
volumeprocessor.info.new_file=New file "{0}".
volumeprocessor.warn.modified_file=Modified file "{0}".
volumeprocessor.warn.missing_file=Missing file "{0}".
volumeprocessor.trace.file_state=File "{0}" in state {1}.
exiftool.error.failed_to_retrieve=Failed to retrieve metadata for file "{0}" with exiftool.
exiftool.debug.undefined_path=Skipping metadata extraction because no path to exiftool was defined.
exiftool.trace.examining_file=About to extract metadata for file "{0}" with exiftool.
exiftool.info.number_examined_files=Examined {0} file(s) with exiftool.
exiftool.info.examined_file=Examined file {0} "{1}", result: "{2}", in {3} ms.
exiftool.info.reopen=Closing and reopening exiftool connection.
exiftool.error.failed_to_close=Failed to close exiftool instance.
hashcreation.debug.computed_value=Computed hash value {0} for input "{1}" in {2} ms ({3} MB/sec).
hashcreation.debug.value_identical=Computed hash value {0} for input "{1}" is identical to previously computed value.
hashcreation.warn.value_differs=Hash values differ for input "{1}" (old value {1}, new value {2}).
hashcreation.error.unknown_algorithm=Hash creation algorithm "{0}" does not exist.
hashcreation.error.file_open_failed=Could not open file "{0}" for reading to compute hash value.
hashcreation.error.input_read=Error reading from input "{0}" while computing hash value.
hashcreation.error.path_conversion_failed=Error converting path "{0}" for opening a file to compute a hash value.
hashcreation.error.no_file_object=No file system object assigned to file.
hashcreation.debug.file_info=About to create hash for "{0}", size={1} byte(s), hash={2}, hash last updated={3}.
hashcreation.info.strategy=File hash creation ({0}), files: {1}.
hashcreation.info.strategy.Percentage=percentage
hashcreation.info.strategy.All=all
hashcreation.info.strategy.None=none
tsv.error.directory_does_not_exist=TSV file directory "{0}" does not exist.
tsv.info.directory_undefined=No TSV file directory defined in configuration.
movievalidator.violation=Movie rule violation for "{0}": 
movievalidator.no_file_extension=No file extension.
movievalidator.file_extension_unknown=Unknown file extension.
movievalidator.file_in_wrong_directory=File in wrong directory, needs to be root-level directory named like the year of this movie.
movievalidator.directory_too_deep=Directory too deep, only the root directory can have subdirectories.
movievalidator.directory_not_a_number=Directory name not a year.
movievalidator.directory_year_too_small=Directory name too small for a year.
movievalidator.directory_year_too_large=Directory name too large for a year.
movievalidator.file_name_structure=File name does not match: titlewithoutdots(.resolution).year.extension.
movievalidator.file_no_year=File name contains no year separated by dots.
movievalidator.file_dir_year_differ=Year in directory and file name differ.
movievalidator.error.connect_wikidata_failure=Failed to send wikidata query about movie.
movievalidator.info.wikidata_result=For movie query "{0}" retrieved id {1} with description "{2}" and label "{3}" in {4} ms.
movievalidator.warn.wikidata_no_result=No result for movie query "{0}" in {1} ms.
personalmediavalidator.error.file_in_wrong_directory=This file is in a directory which does not allow files: "{0}".
personalmediavalidator.error.xmp_without_file=XMP file has no matching file with same base name but different extension: "{0}".
shutdown.info.shutting_down=Shutting down application.
tvseriesvalidator.violation=Television series rule violation for "{0}": 
tvseriesvalidator.no_files_in_root_directory=Root directory must not contain files.
tvseriesvalidator.directory_not_a_number=Directory name not a year "{0}".
tvseriesvalidator.directory_year_too_small=Directory name too small for a year "{0}".
tvseriesvalidator.directory_year_too_large=Directory name too large for a year "{0}".
tvseriesvalidator.no_files_in_year_directory=Year directory must not contain files.
tvseriesvalidator.no_files_in_show_directory=Show directory must not contain files.
tvseriesvalidator.duplicate_season_directory=Duplicate season directory.
tvseriesvalidator.episode_season_and_season_directory_differ=File name season and directory name season differ.
tvseriesvalidator.debug.entering_year_directory=Entering year directory "{0}".
tvseriesvalidator.debug.entering_show_directory=Entering show directory "{0}".
tvseriesvalidator.trace.entering_season_directory=Entering season directory "{0}".
tvseriesvalidator.trace.checking_episode_file=Checking episode file "{0}".
tvseriesvalidator.info.television_show=Determined Wikidata entity ID {0} for television show "{1}" which started in {2}.
wikidataservice.error.failed_to_run_query=Failed to run Wikidata query.
wikidataservice.debug.created_http_builder=Created HTTP builder in {0} ms.
wikidataservice.debug.initialized_http_builder=Initialized HTTP builder in {0} ms.
wikidataservice.debug.sparql_query_time=Ran Wikidata SPARQL query in {0} ms.
wikidataservice.info.television_show_season=Assigned Wikidata entity {0} to television show "{1}" season {2}.
wikidataservice.info.television_show_episode=Assigned Wikidata entity {0} to television show episode in file "{1}".
wikidataservice.info.assign_unknown_entity=Assigned unknown wikidata entity id ? to "{0}".
wikidataservice.error.failed_reading_file=Failed to read from file "{0}".
wikidataservice.error.failed_closing_file=Failed to close file "{0}".
